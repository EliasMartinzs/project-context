datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  city          String?
  address       String?
  cep           String?
  phone         String?
  language      String?
  birthday      String?
  gender        String?
  services      Service[]
  serviceCount  Int       @default(0)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Service {
  id          String         @id @default(cuid())
  title       String
  description String
  observation String?
  price       Float
  photo       String?
  categories  Category[]
  userId      String
  user        User           @relation(fields: [userId], references: [id])
  extras      ServiceExtra[]
  createdAt   DateTime       @default(now())
}

model ServiceExtra {
  id        String  @id @default(cuid())
  name      String
  check     Boolean @default(false)
  price     Float
  serviceId String
  service   Service @relation(fields: [serviceId], references: [id])
}

model Category {
  id       String    @id @default(cuid())
  category String
  services Service[]
}
